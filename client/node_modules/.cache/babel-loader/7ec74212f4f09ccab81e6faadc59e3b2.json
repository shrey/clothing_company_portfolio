{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/components/sign-in/sing-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart, emailSignInStart, toggleLoading } from '../../redux/user/user.action';\nimport { connect } from 'react-redux';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart,\n  toggleLoading\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const {email, password} = this.state;\n\n    toggleLoading();\n    emailSignInStart(email, password);\n    toggleLoading(); // try{\n    //     await auth.signInWithEmailAndPassword(email, password);\n    //     this.setState({email: '', password: ''});\n    // }catch(error){\n    //     console.log(error.message);\n    // }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"SIGN IN\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"Sign In With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  })),\n  toggleLoading: () => dispatch(toggleLoading())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/components/sign-in/sing-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","signInWithGoogle","auth","googleSignInStart","emailSignInStart","toggleLoading","connect","SignIn","userCredentials","setCredentials","email","password","handleChange","event","value","name","target","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,uBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,EAAyBC,IAAzB,QAAoC,+BAApC;AACA,SAAQC,iBAAR,EAA0BC,gBAA1B,EAA2CC,aAA3C,QAA+D,8BAA/D;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAACH,EAAAA,gBAAD;AAAkBD,EAAAA,iBAAlB;AAAoCE,EAAAA;AAApC,CAAD,KAAwD;AAEnE,QAAM,CAACG,eAAD,EAAiBC,cAAjB,IAAmCX,QAAQ,CAAC;AAACY,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAAjD;;AACA,QAAMC,YAAY,GAAGC,KAAK,IAAG;AACzB,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA;AAAP,QAAeF,KAAK,CAACG,MAA3B;AACAP,IAAAA,cAAc,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACO,IAAD,GAAQD;AAA7B,KAAD,CAAd;AACH,GAHD;;AAIA,QAAK;AAACJ,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBH,eAAxB;;AAEA,QAAMS,YAAY,GAAG,MAAMJ,KAAN,IAAc;AAC/BA,IAAAA,KAAK,CAACK,cAAN,GAD+B,CAK/B;;AACAb,IAAAA,aAAa;AACdD,IAAAA,gBAAgB,CAACM,KAAD,EAAOC,QAAP,CAAhB;AACAN,IAAAA,aAAa,GARmB,CAS/B;AACA;AACA;AACA;AACA;AACA;AAEH,GAhBD;;AAoBI,sBAEA;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADR,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFR,eAGQ;AAAM,IAAA,QAAQ,EAAIY,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAG,OAAlB;AAA0B,IAAA,IAAI,EAAG,OAAjC;AAAyC,IAAA,YAAY,EAAIL,YAAzD;AAAuE,IAAA,KAAK,EAAIF,KAAhF;AAAuF,IAAA,KAAK,EAAG,OAA/F;AAAuG,IAAA,QAAQ,MAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAGI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAG,UAAlB;AAA6B,IAAA,IAAI,EAAG,UAApC;AAA+C,IAAA,KAAK,EAAGC,QAAvD;AAAiE,IAAA,YAAY,EAAIC,YAAjF;AAA+F,IAAA,KAAK,EAAG,UAAvG;AAAkH,IAAA,QAAQ,MAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,eAKI;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAG,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,eAIA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAG,QAArB;AAA8B,IAAA,OAAO,EAAIT,iBAAzC;AAA4D,IAAA,cAAc,MAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJA,CALJ,CAHR,CAFA;AAsBH,CAnDL;;AAqDA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAc;AACrCjB,EAAAA,iBAAiB,EAAE,MAAMiB,QAAQ,CAACjB,iBAAiB,EAAlB,CADI;AAErCC,EAAAA,gBAAgB,EAAE,CAACM,KAAD,EAAOC,QAAP,KAAoBS,QAAQ,CAAChB,gBAAgB,CAAC;AAACM,IAAAA,KAAD;AAAOC,IAAAA;AAAP,GAAD,CAAjB,CAFT;AAGrCN,EAAAA,aAAa,EAAE,MAAMe,QAAQ,CAACf,aAAa,EAAd;AAHQ,CAAd,CAA3B;;AAKA,eAAeC,OAAO,CAAE,IAAF,EAAOa,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React,{useState} from 'react'\nimport './sign-in.styles.scss'\nimport FormInput from '../form-input/form-input-component'\nimport CustomButton from '../custom-button/custom-button.component';\nimport {signInWithGoogle,auth} from '../../firebase/firebase.utils'\nimport {googleSignInStart,emailSignInStart,toggleLoading} from '../../redux/user/user.action'\nimport {connect} from 'react-redux'\nconst SignIn = ({emailSignInStart,googleSignInStart,toggleLoading}) => {\n    \n    const [userCredentials,setCredentials] = useState({email: '', password: ''})\n    const handleChange = event =>{\n        const {value,name} = event.target;\n        setCredentials({...userCredentials, [name]: value});\n    }\n    const{email,password} = userCredentials;\n    \n    const handleSubmit = async event =>{\n        event.preventDefault();\n        \n         \n\n        // const {email, password} = this.state;\n        toggleLoading();\n       emailSignInStart(email,password);\n       toggleLoading();\n        // try{\n        //     await auth.signInWithEmailAndPassword(email, password);\n        //     this.setState({email: '', password: ''});\n        // }catch(error){\n        //     console.log(error.message);\n        // }\n        \n    }\n    \n        \n        \n        return(\n        \n        <div className = \"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n                <form onSubmit = {handleSubmit}>\n                    <FormInput name = \"email\" type = \"email\" handleChange = {handleChange} value = {email} label = \"email\" required/>\n                    \n                    <FormInput name = \"password\" type = \"password\" value ={password} handleChange = {handleChange} label = \"password\" required/>\n                    \n                    <div className = \"buttons\">\n                    <CustomButton type = \"submit\">\n                        SIGN IN \n                    </CustomButton>\n                    <CustomButton type = \"button\" onClick = {googleSignInStart} isGoogleSignIn >Sign In With Google</CustomButton>\n                   \n                    </div>\n                    \n                    \n                </form>\n            </div>\n        )\n    }\n\nconst mapDispatchToProps = (dispatch) =>({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email,password})),\n    toggleLoading: () => dispatch(toggleLoading())\n})\nexport default connect (null,mapDispatchToProps)(SignIn); "]},"metadata":{},"sourceType":"module"}