{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n} // export function* signInWithEmail(action){\n//     try{\n//         const {email, password} = action.payload;\n//         const \n//     }\n//     catch(error){\n//     }\n// }\n// export function* onEmailSignInStart(){\n//     yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n// }\n// export function* userSagas(){\n//     yield all([call(onGoogleSignInStart)])\n// }","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,mBAAR,EAA4BC,mBAA5B,QAAsD,eAAtD;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA2BI,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CAACO,mBAAmB,CAAC;AAC9BQ,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADa;AAE9B,SAAGF,YAAY,CAACG,IAAb;AAF2B,KAAD,CAApB,CAAT;AAIP,GARG,CAQH,OAAMC,KAAN,EAAY;AACL,UAAMjB,GAAG,CAACQ,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\nimport {googleSignInSuccess,googleSignInFailure} from './user.action'\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);  \n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({\n        id: userSnapshot.id ,\n        ...userSnapshot.data()\n        }))\n}catch(error){\n        yield put(googleSignInFailure(error));\n    }\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle) \n}\n\n// export function* signInWithEmail(action){\n//     try{\n//         const {email, password} = action.payload;\n//         const \n//     }\n//     catch(error){\n\n//     }\n// }\n// export function* onEmailSignInStart(){\n//     yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n// }\n// export function* userSagas(){\n//     yield all([call(onGoogleSignInStart)])\n// }"]},"metadata":{},"sourceType":"module"}