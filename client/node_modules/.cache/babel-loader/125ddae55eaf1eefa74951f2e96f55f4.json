{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    call(console.log(userRef));\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(user);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(emailSignInFailure);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","console","log","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,mBAAR,EAA4BC,mBAA5B,EAAgDC,kBAAhD,EAAmEC,kBAAnE,QAA4F,eAA5F;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA2BM,IAA3B,CAA1B;AACCV,IAAAA,IAAI,CAACa,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAD,CAAJ;AACD,UAAMG,YAAY,GAAG,MAAMH,OAAO,CAACI,GAAR,EAA3B;AAEA,UAAMlB,GAAG,CAACO,mBAAmB,CAAC;AAC9BY,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADa;AAE9B,SAAGF,YAAY,CAACG,IAAb;AAF2B,KAAD,CAApB,CAAT;AAIP,GAVG,CAUH,OAAMC,KAAN,EAAY;AACL,UAAMrB,GAAG,CAACQ,mBAAmB,CAACa,KAAD,CAApB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMvB,UAAU,CAACI,eAAe,CAACoB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUa,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAV,CAA1B,EAAsD;AACzD,MAAG;AAEC,UAAM;AAACf,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAArB;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,UAAME,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA2BM,IAA3B,CAA1B;AACA,UAAMK,YAAY,GAAG,MAAMH,OAAO,CAACI,GAAR,EAA3B;AACA,UAAMlB,GAAG,CAACS,kBAAkB,CAAC;AACzBU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADQ;AAEzB,SAAGF,YAAY,CAACG,IAAb;AAFsB,KAAD,CAAnB,CAAT;AAIH,GAVD,CAWA,OAAMC,KAAN,EAAY;AACR,UAAMrB,GAAG,CAACU,kBAAD,CAAT;AACH;AACJ;AACD,OAAO,UAAUmB,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACI,eAAe,CAAC2B,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AACD,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,EAA2BpB,IAAI,CAAC2B,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\nimport {googleSignInSuccess,googleSignInFailure,emailSignInSuccess,emailSignInFailure} from './user.action'\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);  \n        const userRef = yield call(createUserProfileDocument,user);\n         call(console.log(userRef));\n        const userSnapshot = yield userRef.get();\n        \n        yield put(googleSignInSuccess({\n        id: userSnapshot.id ,\n        ...userSnapshot.data()\n        }))\n}catch(error){\n        yield put(googleSignInFailure(error));\n    }\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle) \n}\n\nexport function* signInWithEmail({payload: {email,password}}){\n    try{\n        \n        const {user} = yield auth.signInWithEmailAndPassword(email,password);\n        console.log(user);\n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(emailSignInSuccess({\n            id: userSnapshot.id,\n            ...userSnapshot.data() \n        }))\n    }\n    catch(error){\n        yield put(emailSignInFailure);\n    }\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n}\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}