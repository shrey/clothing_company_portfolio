{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    email,\n    password,\n    displayName,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords don't match\");\n      return;\n    }\n\n    try {\n      const emailPasswordAndName = {\n        email,\n        password,\n        displayName\n      };\n      signUpStart(emailPasswordAndName);\n    } catch (error) {\n      console.log(error);\n      return;\n    } // try{\n    //     const {user} = await auth.createUserWithEmailAndPassword(email,password);\n    //     createUserProfileDocument(user,{displayName}) \n    //     this.setState({\n    //         displayName: '',\n    //         email :'',\n    //         password: '',\n    //         confirmPassword: ''\n    //     })\n    // }catch(error){\n    //     console.log(error);\n    // }\n\n  };\n\n  const handleChange = event => {\n    console.log('Fired');\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Sign Up with your email and password \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: emailPasswordAndName => dispatch(signUpStart(emailPasswordAndName))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","emailPasswordAndName","error","console","log","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {auth,createUserProfileDocument} from \"../../firebase/firebase.utils\";\nimport {connect} from 'react-redux'\nimport {signUpStart} from '../../redux/user/user.action'\nconst SignUp = ({signUpStart}) =>{\n    const [userCredentials,setCredentials] = useState({displayName: '', email: '', password: '', confirmPassword: ''})\n    const {email,password,displayName, confirmPassword} = userCredentials;\n    const handleSubmit = async (event)=>{\n        \n        event.preventDefault(); \n        \n        if(password !== confirmPassword){\n            alert(\"Passwords don't match\");\n             return;\n        }\n        try{\n            const emailPasswordAndName = {email,password,displayName};\n            \n            signUpStart(emailPasswordAndName);\n        }catch(error){\n            console.log(error);\n            return;\n        }\n        \n        // try{\n        //     const {user} = await auth.createUserWithEmailAndPassword(email,password);\n        //     createUserProfileDocument(user,{displayName}) \n        //     this.setState({\n        //         displayName: '',\n        //         email :'',\n        //         password: '',\n        //         confirmPassword: ''\n        //     })\n            \n        // }catch(error){\n        //     console.log(error);\n        // }\n    }\n    const handleChange = (event)=>{\n        console.log('Fired');\n        const {name,value} = event.target;\n        setCredentials({...userCredentials, [name]: value})\n      \n    }\n    \n        \n        return(\n            <div className = \"sign-up\">\n                <h2 className = 'title'>\n                    I do not have an account\n                </h2>\n                <span>Sign Up with your email and password </span>\n                <form className = \"sign-up-form\" onSubmit = {handleSubmit}>\n                    <FormInput \n                    type = \"text\" \n                    name = \"displayName\" \n                    value = {displayName} \n                    onChange = {handleChange} \n                    label = \"Display Name\"/>\n                    <FormInput \n                    type = \"email\" \n                    name = \"email\" \n                    value = {email} \n                    onChange = {handleChange} \n                    label = \"email\"/>\n                    <FormInput \n                    type = \"password\" \n                    name = \"password\" \n                    value = {password} \n                    onChange = {handleChange} \n                    label = \"Password\"/>\n                    <FormInput \n                    type = \"password\" \n                    name = \"confirmPassword\" \n                    value = {confirmPassword} \n                    onChange = {handleChange} \n                    label = \"Confirm Password \"/>\n                    <CustomButton type = \"submit\">Sign Up</CustomButton> \n                </form>\n            </div>\n        )\n    }\n\nconst mapDispatchToProps = dispatch =>({\n    signUpStart: (emailPasswordAndName) => dispatch(signUpStart(emailPasswordAndName))\n})\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}