{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { clearCart } from '../../redux/cart/cart.action';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n\nconst StripeCheckoutButton = ({\n  price,\n  clearCart\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_Yz4UKK0b1DWiJHD5xJxEnle500CfwERHQj';\n\n  const onToken = token => {\n    console.log(token);\n    clearCart();\n    axios({\n      url: 'payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }).then(response => {\n      alert('Payment Successful');\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert(\"There was an Issue with your payment, please make sure you use the provided credit card\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"CRWN Clothing Ltd\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: `Your total is $${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","clearCart","axios","connect","StripeCheckoutButton","price","priceForStripe","publishableKey","onToken","token","console","log","url","method","data","amount","then","response","alert","catch","error","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAOJ,EAAAA;AAAP,CAAD,KAAuB;AAChD,QAAMK,cAAc,GAAGD,KAAK,GAAC,GAA7B;AACA,QAAME,cAAc,GAAG,4CAAvB;;AACA,QAAMC,OAAO,GAAGC,KAAK,IAAG;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAECR,IAAAA,SAAS;AACTC,IAAAA,KAAK,CAAC;AACFU,MAAAA,GAAG,EAAE,SADH;AAEFC,MAAAA,MAAM,EAAE,MAFN;AAGFC,MAAAA,IAAI,EAAE;AACFC,QAAAA,MAAM,EAAET,cADN;AAEFG,QAAAA;AAFE;AAHJ,KAAD,CAAL,CAOGO,IAPH,CAOQC,QAAQ,IAAI;AAChBC,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,KATD,EASGC,KATH,CASSC,KAAK,IAAI;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BU,IAAI,CAACC,KAAL,CAAWF,KAAX,CAA/B;AACCF,MAAAA,KAAK,CAAC,yFAAD,CAAL;AACJ,KAZD;AAaJ,GAjBD;;AAkBA,sBACI,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAG,SAAxB;AACA,IAAA,IAAI,EAAG,mBADP;AAEA,IAAA,cAAc,MAFd;AAGA,IAAA,eAAe,MAHf;AAIA,IAAA,KAAK,EAAG,gCAJR;AAKA,IAAA,WAAW,EAAK,kBAAiBb,KAAM,EALvC;AAMA,IAAA,MAAM,EAAIC,cANV;AAOC,IAAA,UAAU,EAAG,SAPd;AAQA,IAAA,KAAK,EAAIE,OART;AASA,IAAA,SAAS,EAAID,cATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAYF,CAjCF;;AAkCA,MAAMgB,kBAAkB,GAAGC,QAAQ,KAAI;AACnCvB,EAAAA,SAAS,EAAE,MAAMuB,QAAQ,CAACvB,SAAS,EAAV;AADU,CAAJ,CAAnC;;AAGA,eAAeE,OAAO,CAAC,IAAD,EAAMoB,kBAAN,CAAP,CAAiCnB,oBAAjC,CAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout'\nimport {clearCart} from '../../redux/cart/cart.action'\nimport axios from 'axios'; \nimport { connect } from 'react-redux';\nconst StripeCheckoutButton = ({price,clearCart}) => {\n    const priceForStripe = price*100;\n    const publishableKey = 'pk_test_Yz4UKK0b1DWiJHD5xJxEnle500CfwERHQj';\n    const onToken = token =>{\n        console.log(token);\n        \n         clearCart();\n         axios({\n             url: 'payment',\n             method: 'post',\n             data: {\n                 amount: priceForStripe,\n                 token\n             }\n         }).then(response => {\n             alert('Payment Successful')\n         }).catch(error => {\n             console.log('Payment error: ', JSON.parse(error));\n              alert(\"There was an Issue with your payment, please make sure you use the provided credit card\")\n         });\n    };\n    return(\n        <StripeCheckout label = \"Pay Now\" \n        name = \"CRWN Clothing Ltd\"\n        billingAddress\n        shippingAddress\n        image = 'https://svgshare.com/i/CUz.svg'\n        description = {`Your total is $${price}`}\n        amount = {priceForStripe}\n         panelLabel = 'Pay Now'\n        token = {onToken}\n        stripeKey = {publishableKey}\n        />\n)}\nconst mapDispatchToProps = dispatch =>({\n    clearCart: () => dispatch(clearCart())\n})\nexport default connect(null,mapDispatchToProps)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}