{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      const {\n        signUpStart\n      } = this.props;\n      event.preventDefault();\n      const {\n        displayName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n\n      if (password !== confirmPassword) {\n        alert(\"Passwords don't match\");\n        return;\n      }\n\n      try {\n        signUpStart({\n          email,\n          password,\n          displayName\n        });\n      } catch (error) {\n        console.log(error);\n        return;\n      } // try{\n      //     const {user} = await auth.createUserWithEmailAndPassword(email,password);\n      //     createUserProfileDocument(user,{displayName}) \n      //     this.setState({\n      //         displayName: '',\n      //         email :'',\n      //         password: '',\n      //         confirmPassword: ''\n      //     })\n      // }catch(error){\n      //     console.log(error);\n      // }\n\n    };\n\n    this.handleChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, \"Sign Up with your email and password \"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: emailPasswordAndName => dispatch(signUpStart({\n    emailPasswordAndName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","displayName","email","password","confirmPassword","state","alert","error","console","log","handleChange","name","value","target","setState","render","mapDispatchToProps","dispatch","emailPasswordAndName"],"mappings":"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","sourcesContent":["import React from 'react';\nimport \"./sign-up.styles.scss\";\nimport FormInput from '../form-input/form-input-component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {auth,createUserProfileDocument} from \"../../firebase/firebase.utils\";\nimport {connect} from 'react-redux'\nimport {signUpStart} from '../../redux/user/user.action'\nclass SignUp extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            displayName: '',\n            email :'',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n    handleSubmit = async (event)=>{\n        const {signUpStart} = this.props;\n        event.preventDefault(); \n        const {displayName,email,password, confirmPassword} = this.state;\n        if(password !== confirmPassword){\n            alert(\"Passwords don't match\");\n             return;\n        }\n        try{\n            signUpStart({email,password,displayName});\n        }catch(error){\n            console.log(error);\n            return;\n        }\n        \n        // try{\n        //     const {user} = await auth.createUserWithEmailAndPassword(email,password);\n        //     createUserProfileDocument(user,{displayName}) \n        //     this.setState({\n        //         displayName: '',\n        //         email :'',\n        //         password: '',\n        //         confirmPassword: ''\n        //     })\n            \n        // }catch(error){\n        //     console.log(error);\n        // }\n    }\n    handleChange = (event)=>{\n        const {name,value} = event.target;\n        this.setState({[name]: value})\n    }\n    render(){\n        const {displayName,email,password, confirmPassword} = this.state;\n        return(\n            <div className = \"sign-up\">\n                <h2 className = 'title'>\n                    I do not have an account\n                </h2>\n                <span>Sign Up with your email and password </span>\n                <form className = \"sign-up-form\" onSubmit = {this.handleSubmit}>\n                    <FormInput \n                    type = \"text\" \n                    name = \"displayName\" \n                    value = {displayName} \n                    onChange = {this.handleChange} \n                    label = \"Display Name\"/>\n                    <FormInput \n                    type = \"email\" \n                    name = \"email\" \n                    value = {email} \n                    onChange = {this.handleChange} \n                    label = \"email\"/>\n                    <FormInput \n                    type = \"password\" \n                    name = \"password\" \n                    value = {password} \n                    onChange = {this.handleChange} \n                    label = \"Password\"/>\n                    <FormInput \n                    type = \"password\" \n                    name = \"confirmPassword\" \n                    value = {confirmPassword} \n                    onChange = {this.handleChange} \n                    label = \"Confirm Password \"/>\n                    <CustomButton type = \"submit\">Sign Up</CustomButton> \n                </form>\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch =>({\n    signUpStart: (emailPasswordAndName) => dispatch(signUpStart({emailPasswordAndName}))\n})\nexport default connect(null,mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}