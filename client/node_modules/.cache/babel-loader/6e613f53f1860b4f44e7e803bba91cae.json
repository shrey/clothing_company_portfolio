{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { createStructuredSelector } from 'reselect';\nimport { identifier } from '@babel/types';\nimport { connect } from 'react-redux';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { selectIsCollectionFetching, selectCollectionIsLoaded } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectCollectionIsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionPage","createStructuredSelector","identifier","connect","fetchCollectionsStartAsync","CollectionOverview","firestore","convertCollectionsSnapshotToMap","selectIsCollectionFetching","selectCollectionIsLoaded","WithSpinner","CollectionPreview","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,wBAAR,QAAwC,UAAxC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,SAAQC,0BAAR,EAAmCC,wBAAnC,QAAmE,gCAAnE;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,iBAAP,MAA8B,kEAA9B;AACA,MAAMC,6BAA6B,GAAIF,WAAW,CAACL,kBAAD,CAAlD;AACA,MAAMQ,yBAAyB,GAAGH,WAAW,CAACV,cAAD,CAA7C;;AACA,MAAMc,QAAN,SAAuBhB,KAAK,CAACiB,SAA7B,CACI;AAGIC,EAAAA,iBAAiB,GAAE;AAChB,UAAK;AAACZ,MAAAA;AAAD,QAA+B,KAAKa,KAAzC;AACCb,IAAAA,0BAA0B;AAE7B;;AAEDc,EAAAA,MAAM,GAAE;AAEJ,UAAM;AAAEC,MAAAA,KAAF;AAAQC,MAAAA,oBAAR;AAA6BC,MAAAA;AAA7B,QAAoD,KAAKJ,KAA/D;AACA,wBACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,EAAnC;AACA,MAAA,MAAM,EAAKL,KAAD,iBACV,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAI,CAACI;AAA7C,SAAqEJ,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAMA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAK,GAAEE,KAAK,CAACG,IAAK,gBAA7B;AACA,MAAA,MAAM,EAAKL,KAAD,iBACV,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAI,CAAEI;AAA1C,SAAmEJ,KAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANA,CADJ;AAcH;;AA1BL;;AA8BA,MAAMM,eAAe,GAAGtB,wBAAwB,CAAC;AAC7CmB,EAAAA,oBAAoB,EAAEZ,0BADuB;AAE7Ca,EAAAA,kBAAkB,EAAEZ;AAFyB,CAAD,CAAhD;;AAIA,MAAMe,kBAAkB,GAAGC,QAAQ,KAAI;AACnCrB,EAAAA,0BAA0B,EAAE,MAAMqB,QAAQ,CAACrB,0BAA0B,EAA3B;AADP,CAAJ,CAAnC;;AAIJ,eAAeD,OAAO,CAACoB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport CollectionPage from '../collection/collection.component'\nimport {createStructuredSelector } from 'reselect'\nimport { identifier } from '@babel/types';\nimport {connect} from 'react-redux';\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions'\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component'\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'    \nimport {selectIsCollectionFetching,selectCollectionIsLoaded} from  '../../redux/shop/shop.selector'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nconst CollectionOverviewWithSpinner =  WithSpinner(CollectionOverview); \nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component\n    {   \n       \n        \n        componentDidMount(){\n           const{fetchCollectionsStartAsync} = this.props;\n            fetchCollectionsStartAsync(); \n            \n        }\n         \n        render(){\n            \n            const { match,isCollectionFetching,isCollectionLoaded } = this.props;  \n            return (\n                <div className = \"shop-page\">\n            \n                <Route exact path = {`${match.path}`} \n                render = {(props) => \n                <CollectionOverviewWithSpinner isLoading = {!isCollectionLoaded} {...props}/>\n                }/>\n                <Route path = {`${match.path}/:collectionId`} \n                render = {(props) => \n                <CollectionPageWithSpinner isLoading = {! isCollectionLoaded } {...props}/>\n                }/>\n            \n                </div>\n            )\n        }   \n    \n    }\n        \n    const mapStateToProps = createStructuredSelector({\n        isCollectionFetching: selectIsCollectionFetching,\n        isCollectionLoaded: selectCollectionIsLoaded\n    })\n    const mapDispatchToProps = dispatch =>({\n        fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()) \n    })\n\nexport default connect(mapStateToProps ,mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}