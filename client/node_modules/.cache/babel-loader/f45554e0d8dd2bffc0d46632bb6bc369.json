{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail(action) {\n  try {\n    const {\n      email,\n      password\n    } = action.payload;\n    const userRef = yield auth.signInWithEmailAndPassword(email, password);\n    console.log(userRef);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","action","email","password","payload","signInWithEmailAndPassword","console","log","message","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,SAAQC,mBAAR,EAA4BC,mBAA5B,EAAgDC,kBAAhD,EAAmEC,kBAAnE,QAA4F,eAA5F;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMR,IAAI,CAACS,eAAL,CAAqBR,cAArB,CAArB;AACA,UAAMS,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA2BM,IAA3B,CAA1B;AACA,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB,CAAC;AAC9BU,MAAAA,EAAE,EAAEF,YAAY,CAACE,EADa;AAE9B,SAAGF,YAAY,CAACG,IAAb;AAF2B,KAAD,CAApB,CAAT;AAIP,GARG,CAQH,OAAMC,KAAN,EAAY;AACL,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,KAAD,CAApB,CAAT;AACH;AACJ;AACD,OAAO,UAAUC,mBAAV,GAA+B;AAClC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUW,eAAV,CAA0BC,MAA1B,EAAiC;AACpC,MAAG;AACC,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoBF,MAAM,CAACG,OAAjC;AACA,UAAMZ,OAAO,GAAG,MAAMV,IAAI,CAACuB,0BAAL,CAAgCH,KAAhC,EAAsCC,QAAtC,CAAtB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACH,GAJD,CAKA,OAAMK,KAAN,EAAY;AACRS,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACW,OAAlB;AACH;AACJ;AACD,OAAO,UAAUC,kBAAV,GAA8B;AACjC,QAAMhC,UAAU,CAACI,eAAe,CAAC6B,mBAAjB,EAAqCV,eAArC,CAAhB;AACH;AACD,OAAO,UAAUW,SAAV,GAAqB;AACxB,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\nimport {googleSignInSuccess,googleSignInFailure,emailSignInSuccess,emailSignInFailure} from './user.action'\n\nexport function* signInWithGoogle(){\n    try{\n        const {user} = yield auth.signInWithPopup(googleProvider);  \n        const userRef = yield call(createUserProfileDocument,user);\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({\n        id: userSnapshot.id ,\n        ...userSnapshot.data()\n        }))\n}catch(error){\n        yield put(googleSignInFailure(error));\n    }\n}\nexport function* onGoogleSignInStart(){\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle) \n}\n\nexport function* signInWithEmail(action){\n    try{\n        const {email, password} = action.payload;\n        const userRef = yield auth.signInWithEmailAndPassword(email,password);\n        console.log(userRef);\n    }\n    catch(error){\n        console.log(error.message);\n    }\n}\nexport function* onEmailSignInStart(){\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\n}\nexport function* userSagas(){\n    yield all([call(onGoogleSignInStart)])\n}"]},"metadata":{},"sourceType":"module"}