{"ast":null,"code":"import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"heyy\");\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","all","ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,IAApB,EAA0BC,GAA1B,EAA8BC,GAA9B,QAAwC,oBAAxC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACC,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACD,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AACA,OAAO,UAAUC,qBAAV,GAAiC;AACrC,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;;AACA,MAAG;AACH,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMf,IAAI,CAACK,+BAAD,EAAiCQ,QAAjC,CAAjC;AACA,UAAMZ,GAAG,CAACM,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AAEC,GAND,CAME,OAAMC,KAAN,EAAY;AACV,UAAMf,GAAG,CAACK,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACH;AACD,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMnB,UAAU,CACZI,eAAe,CAACgB,uBADJ,EAEZX,qBAFY,CAAhB;AAIH;AACD,OAAO,UAAUY,SAAV,GAAqB;AACxB,QAAMlB,GAAG,CAAC,CAACF,IAAI,CAACkB,qBAAD,CAAL,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest, call, put,all} from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\n import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\nimport {fetchCollectionsFailure,fetchCollectionsSuccess} from './shop.actions'\nexport function* fetchCollectionsAsync(){\n   yield console.log(\"heyy\"); \n   try{\n   const collectionRef = firestore.collection('collections'); \n   const snapshot = yield collectionRef.get();\n   const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot);\n   yield put(fetchCollectionsSuccess(collectionsMap));\n      \n   } catch(error){\n       yield put(fetchCollectionsFailure(error.message));   \n   }\n}\nexport function* fetchCollectionsStart() {\n    yield takeLatest(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n        );\n} \nexport function* shopSagas(){\n    yield all([call(fetchCollectionsStart)])\n}"]},"metadata":{},"sourceType":"module"}