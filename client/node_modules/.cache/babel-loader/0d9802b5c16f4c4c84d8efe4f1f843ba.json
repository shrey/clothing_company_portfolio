{"ast":null,"code":"var _jsxFileName = \"/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../collection/collection.component';\nimport { identifier } from '@babel/types';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      loading\n    } = this.props;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 76\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 84\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rajeshdubey/Desktop/Stuff/react_course/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","CollectionPage","identifier","connect","updateCollections","CollectionOverview","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionPreview","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,iBAAP,MAA8B,kEAA9B;AACA,MAAMC,6BAA6B,GAAIF,WAAW,CAACH,kBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGH,WAAW,CAACP,cAAD,CAA7C;;AACA,MAAMW,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CACI;AAAA;AAAA;AAAA,SACIC,KADJ,GACY;AACJC,MAAAA,OAAO,EAAE;AADL,KADZ;AAAA,SAIIC,uBAJJ,GAI8B,IAJ9B;AAAA;;AAKIC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACb,MAAAA;AAAD,QAAsB,KAAKc,KAAjC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACA,SAAKJ,uBAAL,GAA+BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC1E,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACAnB,MAAAA,iBAAiB,CAACmB,cAAD,CAAjB;AACA,WAAKG,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACC,KAL8B,CAA/B;AAMH;;AAEDY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACZ,MAAAA;AAAD,QAAY,KAAKG,KAAvB;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEA,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAK,GAAEU,KAAK,CAACC,IAAK,EAAnC;AAAsC,MAAA,MAAM,EAAKX,KAAD,iBAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAIH;AAA5C,SAAyDG,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,eAGA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAK,GAAEU,KAAK,CAACC,IAAK,gBAA7B;AAA8C,MAAA,MAAM,EAAKX,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAIH;AAAxC,SAAqDG,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAQH;;AA3BL;;AA+BA,MAAMY,kBAAkB,GAAGC,QAAQ,KAAI;AACnC3B,EAAAA,iBAAiB,EAAImB,cAAD,IAAoBQ,QAAQ,CAAC3B,iBAAiB,CAACmB,cAAD,CAAlB;AADb,CAAJ,CAAnC;;AAIJ,eAAepB,OAAO,CAAC,IAAD,EAAM2B,kBAAN,CAAP,CAAiClB,QAAjC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom'\nimport CollectionPage from '../collection/collection.component'\nimport { identifier } from '@babel/types';\nimport {connect} from 'react-redux';\nimport {updateCollections} from '../../redux/shop/shop.actions'\nimport CollectionOverview from '../../components/collections-overview/collections-overview.component'\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'    \nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\nimport CollectionPreview from '../../components/collection-preview/collection-preview.component';\nconst CollectionOverviewWithSpinner =  WithSpinner(CollectionOverview); \nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\nclass ShopPage extends React.Component\n    {   \n        state = {\n            loading: true\n        }\n        unsubscribeFromSnapshot = null;\n        componentDidMount(){\n            const {updateCollections} = this.props;\n            const collectionRef = firestore.collection('collections'); \n            this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            console.log(collectionsMap);\n            updateCollections(collectionsMap);\n            this.setState({loading: false});\n            })\n        }\n         \n        render(){\n            const {loading} = this.props;\n            const { match } = this.props;  \n            return (\n                <div className = \"shop-page\">\n            \n                <Route exact path = {`${match.path}`} render = {(props) => <CollectionOverviewWithSpinner isLoading = {loading} {...props}/>}/>\n                <Route path = {`${match.path}/:collectionId`} render = {(props) => <CollectionPageWithSpinner isLoading = {loading} {...props}/>}/>\n            \n                </div>\n            )\n        }   \n    \n    }\n        \n    const mapDispatchToProps = dispatch =>({\n        updateCollections : (collectionsMap) => dispatch(updateCollections(collectionsMap))\n    })\n\nexport default connect(null,mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}